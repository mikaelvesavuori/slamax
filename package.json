{
  "name": "slamax",
  "version": "1.1.0",
  "description": "Calculates maximum composite SLA for a list of sequentially provided cloud services or your custom-defined services",
  "homepage": "https://github.com/mikaelvesavuori/slamax",
  "repository": {
    "type": "git",
    "url": "https://github.com/mikaelvesavuori/slamax.git"
  },
  "author": "Mikael Vesavuori",
  "keywords": [
    "sla",
    "sla-calculator",
    "sla-calculation",
    "cloud-sla"
  ],
  "license": "MIT",
  "main": "./build/index.js",
  "types": "./build/index.d.ts",
  "files": [
    "build/*"
  ],
  "scripts": {
    "start": "node ./build/index.js",
    "test": "npx c8 -reporter=lcov ava",
    "build": "rm -rf build && npx webpack && mv build/src/index.d.ts build && rm -rf build/tests && npm run fix:export",
    "build:hosting": "npm run docs && cp -r diagrams typedoc-docs",
    "fix:export": "echo \"export { default as SlaMax } from './src/adapters/library';\" > build/index.d.ts",
    "lint": "npx eslint './src/**/*.ts' --quiet --fix",
    "lint:vale": "vale README.md",
    "docs": "npm run docs:depcruise && npm run docs:typedoc",
    "docs:depcruise": "npx depcruise --include-only '^src' --output-type dot src | dot -T svg > diagrams/dependencygraph.svg",
    "docs:typedoc": "npx typedoc --entryPointStrategy expand",
    "get:slas": "bash get-latest-slas.sh",
    "prepare": "husky install",
    "generate:json": "ts-node ./scripts/generateJson.ts ./generated/sla_data.json"
  },
  "devDependencies": {
    "@types/jest": "27",
    "@types/node": "latest",
    "@typescript-eslint/eslint-plugin": "5",
    "@typescript-eslint/parser": "5",
    "ava": "4",
    "babel-loader": "8",
    "c8": "7",
    "dependency-cruiser": "11",
    "eslint": "8",
    "eslint-config-prettier": "8",
    "eslint-plugin-prettier": "4",
    "husky": "7",
    "prettier": "2",
    "ts-loader": "latest",
    "ts-node": "latest",
    "tslib": "latest",
    "typedoc": "latest",
    "typescript": "4",
    "webpack": "5",
    "webpack-cli": "latest"
  },
  "ava": {
    "extensions": [
      "ts"
    ],
    "files": [
      "tests/**/*.ts"
    ],
    "require": [
      "ts-node/register"
    ]
  }
}
